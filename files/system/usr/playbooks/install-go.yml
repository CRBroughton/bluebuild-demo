---
- name: Install Go for BlueBuild OS
  hosts: localhost
  connection: local
  gather_facts: true
  become: false
  vars:
    # Default to latest version if not specified
    go_version: "{{ go_version | default('latest') }}"
    # Architecture can also be configured
    go_arch: "{{ go_arch | default('linux-amd64') }}"
  
  tasks:
    - name: Get latest Go version (when version is 'latest')
      uri:
        url: https://go.dev/VERSION?m=text
        return_content: true
      register: go_version_response
      when: go_version == 'latest'

    - name: Set Go version from API response (when version is 'latest')
      set_fact:
        resolved_go_version: "{{ go_version_response.content.split('\n')[0] | trim }}"
      when: go_version == 'latest'

    - name: Set Go version from variable (when specific version requested)
      set_fact:
        resolved_go_version: "{{ go_version if go_version.startswith('go') else 'go' + go_version }}"
      when: go_version != 'latest'

    - name: Set Go tarball name
      set_fact:
        go_tarball: "{{ resolved_go_version }}.{{ go_arch }}.tar.gz"

    - name: Display Go version being installed
      debug:
        msg: "Installing Go {{ resolved_go_version }} for {{ go_arch }}"

    - name: Create .local directory
      file:
        path: "{{ ansible_env.HOME }}/.local"
        state: directory
        mode: '0755'

    - name: Download Go tarball
      get_url:
        url: "https://go.dev/dl/{{ go_tarball }}"
        dest: "/tmp/{{ go_tarball }}"
        mode: '0644'

    - name: Remove existing Go installation
      file:
        path: "{{ ansible_env.HOME }}/.local/go"
        state: absent

    - name: Extract Go tarball
      unarchive:
        src: "/tmp/{{ go_tarball }}"
        dest: "/tmp"
        remote_src: true

    - name: Move Go to final location
      command: mv /tmp/go "{{ ansible_env.HOME }}/.local/go"
      args:
        creates: "{{ ansible_env.HOME }}/.local/go/bin/go"

    - name: Clean up tarball
      file:
        path: "/tmp/{{ go_tarball }}"
        state: absent

    - name: Add Go to Fish shell PATH
      shell: fish -c "fish_add_path {{ ansible_env.HOME }}/.local/go/bin"
      ignore_errors: true

    - name: Display installation completion
      debug:
        msg:
          - "Go installation completed: {{ resolved_go_version }}"
          - "Architecture: {{ go_arch }}"
          - "Installed to: {{ ansible_env.HOME }}/.local/go"
          - "Added to Fish shell PATH"